name: Build and Deploy
on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions: write-all

jobs:
  deploy-job:
    runs-on: ubuntu-latest
    steps:
      - name: Checks out repo
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Node
        id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Cache build
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependancies
        run: yarn install --prefer-offline --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Push Build
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: build # The branch name where you want to push the assets
          FOLDER: .next # The directory where your assets are generated
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
          MESSAGE: "Build: {msg}" # The commit message
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }} # The private key used to push to the repo
